
The idea is to parallelize the running of reading the revisions and
index the revision and combine them to a full index.


  Producer:
    - Read the repository and get the information about
      how many revisions and which revisions are available etc.

    - Produce blocks of revisions (like 1..1000, 1001..2000 etc.)
 
      This concept will work also if we use different version control systems
      like git. The only difference is how to describe the revisions ranges.
      
      -> start a thread for every block. (Consumer)

  Consumer:
    - Index the given revision range into a separate file



  MergeConsumer:
    - Merge the resulting index into the overall index.
    - This should only be done if we have at least 4 or may be 5 
      indexes generated?
    

ExecutorCompletionService (Java)
  - See how to use that for MergeConsumer and may be for Consumer too.


Thoughts on mergeIndex:

Think we have 5 Index generated where each index has 2 KiB

Option 1:
  Merge all 5 into a single 1

   Moving 5 * 2 KiB = 10 KiB

Option 2:
  Merge Index 1,2 => 2a       2 * 2 KiB     4 KiB
  Merge Index 3,4 => 4a       2 * 2 KiB     4 KiB
  Merge Index 4a, 5 => 5a     2 * 2 KiB     4 KiB

  Merge 2a, 4a, 5a => result  3 * 4 KiB    12 KiB
                                          ===
                                           24 KiB


